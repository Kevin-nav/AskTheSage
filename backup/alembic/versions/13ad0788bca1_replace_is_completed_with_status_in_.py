"""replace_is_completed_with_status_in_quizsession

Revision ID: 13ad0788bca1
Revises: 313b720001d6
Create Date: 2025-08-29 15:25:13.901244

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '13ad0788bca1'
down_revision: Union[str, Sequence[str], None] = '313b720001d6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('quiz_sessions', sa.Column('status', sa.String(length=50), nullable=True))
    
    # Migrate data from is_completed to status
    op.execute("UPDATE quiz_sessions SET status = 'completed' WHERE is_completed = TRUE")
    op.execute("UPDATE quiz_sessions SET status = 'in_progress' WHERE is_completed = FALSE")
    
    # Now that data is migrated, make the column not nullable
    op.alter_column('quiz_sessions', 'status', existing_type=sa.String(length=50), nullable=False, server_default='in_progress')
    
    op.drop_column('quiz_sessions', 'is_completed')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('quiz_sessions', sa.Column('is_completed', sa.BOOLEAN(), autoincrement=False, nullable=True))

    # Migrate data back from status to is_completed
    op.execute("UPDATE quiz_sessions SET is_completed = TRUE WHERE status = 'completed'")
    op.execute("UPDATE quiz_sessions SET is_completed = FALSE WHERE status != 'completed'")

    op.alter_column('quiz_sessions', 'is_completed', existing_type=sa.BOOLEAN(), nullable=False, server_default=sa.text('false'))

    op.drop_column('quiz_sessions', 'status')
    # ### end Alembic commands ###